# Install packages from CRAN
install.packages(c("tidyverse", "vegan", "ape", "corrplot", "ggplot2", "dplyr",
"tidyr", "readr", "stringr", "ggpubr", "RColorBrewer", "reshape2"))
install.packages(c("tidyverse", "vegan", "ape", "corrplot", "ggplot2", "dplyr",
"tidyr", "readr", "stringr", "ggpubr", "RColorBrewer", "reshape2"))
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
library(tidyverse)
library(phyloseq)
library(vegan)
library(ggplot2)
library(dplyr)
library(microbiome)
library(DESeq2)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
BiocManager::install("DESeq2")
BiocManager::install("microbiome")
install.packages("reshape2")
install.packages("ggpubr")
library(phyloseq)
library(DESeq2)
library(microbiome)
required_packages <- c("tidyverse", "phyloseq", "vegan", "ggplot2", "dplyr", "microbiome", "DESeq2")
sapply(required_packages, require, character.only = TRUE)
sapply(required_packages, require, character.only = TRUE)
set.seed(123)
n_samples <- 200
simulated_metadata <- data.frame(
SampleID = paste0("Sample_", 1:n_samples),
CigarettesPerDay = c(rpois(n_samples/2, 15), rpois(n_samples/2, 0)), # Mix of smokers and non-smokers
Age = sample(30:70, n_samples, replace = TRUE),
Sex = sample(c("Male", "Female"), n_samples, replace = TRUE),
BMI = rnorm(n_samples, 26, 4),
COPD_Status = sample(c("Yes", "No"), n_samples, replace = TRUE, prob = c(0.3, 0.7)),
Recent_Antibiotics = sample(c("Yes", "No"), n_samples, replace = TRUE, prob = c(0.2, 0.8))
)
n_taxa <- 150
simulated_otu <- matrix(rnbinom(n_samples * n_taxa, mu = 100, size = 1), nrow = n_taxa)
rownames(simulated_otu) <- paste0("OTU_", 1:n_taxa)
colnames(simulated_otu) <- paste0("Sample_", 1:n_samples)
simulated_taxonomy <- matrix(
sample(c("Firmicutes", "Bacteroidetes", "Proteobacteria", "Actinobacteria"),
n_taxa * 7, replace = TRUE),
nrow = n_taxa
)
rownames(simulated_taxonomy) <- paste0("OTU_", 1:n_taxa)
colnames(simulated_taxonomy) <- c("Phylum", "Class", "Order", "Family", "Genus", "Species", "Strain")
OTU <- otu_table(simulated_otu, taxa_are_rows = TRUE)
TAX <- tax_table(simulated_taxonomy)
META <- sample_data(simulated_metadata)
physeq <- phyloseq(OTU, TAX, META)
physeq <- phyloseq(OTU, TAX, META)
# Convert to phyloseq object (standard for microbiome analysis)
OTU <- otu_table(simulated_otu, taxa_are_rows = TRUE)
TAX <- tax_table(simulated_taxonomy)
META <- sample_data(simulated_metadata)
physeq <- phyloseq(OTU, TAX, META)
# Check the current sample names
print("OTU table sample names:")
print(colnames(simulated_otu)[1:5])
print("Metadata sample names:")
print(simulated_metadata$SampleID[1:5])
# Fix the sample names to be consistent
# Make sure the OTU table column names match the metadata SampleID
colnames(simulated_otu) <- simulated_metadata$SampleID
# Now create the phyloseq objects again
OTU <- otu_table(simulated_otu, taxa_are_rows = TRUE)
TAX <- tax_table(simulated_taxonomy)
META <- sample_data(simulated_metadata)
# Set the row names of the metadata to match sample names
rownames(META) <- simulated_metadata$SampleID
# Now create the phyloseq object - this should work
physeq <- phyloseq(OTU, TAX, META)
# Verify it worked
print(physeq)
physeq <- phyloseq(OTU, TAX, META)
physeq <- prune_samples(sample_sums(physeq) > 100, physeq)
physeq <- filter_taxa(physeq, function(x) sum(x) > 0, TRUE)
physeq <- filter_taxa(physeq, function(x) sum(x > 0) > (0.05 * length(x)), TRUE)
smoking_plot <- simulated_metadata %>%
ggplot(aes(x = CigarettesPerDay)) +
geom_histogram(binwidth = 1, fill = "steelblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Daily Cigarette Consumption",
x = "Cigarettes per Day",
y = "Number of Participants") +
theme_minimal()
print(smoking_plot)
simulated_metadata <- simulated_metadata %>%
mutate(Smoking_Intensity = case_when(
CigarettesPerDay == 0 ~ "Non-smoker",
CigarettesPerDay <= 10 ~ "Light smoker (1-10)",
CigarettesPerDay <= 20 ~ "Moderate smoker (11-20)",
CigarettesPerDay > 20 ~ "Heavy smoker (>20)"
))
sample_data(physeq)$Smoking_Intensity <- factor(simulated_metadata$Smoking_Intensity,
levels = c("Non-smoker", "Light smoker (1-10)",
"Moderate smoker (11-20)", "Heavy smoker (>20)"))
alpha_diversity <- estimate_richness(physeq, measures = c("Shannon", "Observed"))
alpha_diversity$Smoking_Intensity <- sample_data(physeq)$Smoking_Intensity
alpha_diversity$CigarettesPerDay <- sample_data(physeq)$CigarettesPerDay
alpha_plot_intensity <- alpha_diversity %>%
ggplot(aes(x = Smoking_Intensity, y = Shannon, fill = Smoking_Intensity)) +
geom_boxplot(alpha = 0.7) +
stat_compare_means(method = "kruskal.test", label = "p.format") +
labs(title = "Alpha Diversity by Smoking Intensity",
x = "Smoking Intensity Category",
y = "Shannon Diversity Index") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
alpha_plot_continuous <- alpha_diversity %>%
ggplot(aes(x = CigarettesPerDay, y = Shannon)) +
geom_point(alpha = 0.6, color = "steelblue") +
geom_smooth(method = "lm", color = "red", se = TRUE) +
labs(title = "Alpha Diversity vs Daily Cigarette Consumption",
x = "Cigarettes per Day",
y = "Shannon Diversity Index") +
theme_minimal()
print(alpha_plot_intensity)
print(alpha_plot_continuous)
library(ggpubr)
alpha_plot_intensity <- alpha_diversity %>%
ggplot(aes(x = Smoking_Intensity, y = Shannon, fill = Smoking_Intensity)) +
geom_boxplot(alpha = 0.7) +
stat_compare_means(method = "kruskal.test", label = "p.format") +
labs(title = "Alpha Diversity by Smoking Intensity",
x = "Smoking Intensity Category",
y = "Shannon Diversity Index") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(alpha_plot_intensity)
bray_dist <- distance(physeq, method = "bray")
bray_dist <- phyloseq::distance(physeq, method = "bray")
metadata_df <- data.frame(sample_data(physeq))
adonis_test_continuous <- adonis2(bray_dist ~ CigarettesPerDay + Age + Sex + BMI,
data = metadata_df, permutations = 999)
adonis_test_categorical <- adonis2(bray_dist ~ Smoking_Intensity + Age + Sex + BMI,
data = metadata_df, permutations = 999)
print("PERMANOVA - Continuous Cigarette Consumption:")
print(adonis_test_continuous)
print("PERMANOVA - Smoking Intensity Categories:")
print(adonis_test_categorical)
bray_dist <- distance(physeq, method = "bray")
otu_matrix <- as(otu_table(physeq), "matrix")
if(taxa_are_rows(physeq)) {
otu_matrix <- t(otu_matrix)  # vegan expects samples as rows
}
bray_dist <- vegan::vegdist(otu_matrix, method = "bray")
bray_dist <- distance(physeq, method = "bray")
metadata_df <- data.frame(sample_data(physeq))
adonis_test_continuous <- adonis2(bray_dist ~ CigarettesPerDay + Age + Sex + BMI,
data = metadata_df, permutations = 999)
adonis_test_categorical <- adonis2(bray_dist ~ Smoking_Intensity + Age + Sex + BMI,
data = metadata_df, permutations = 999)
print("PERMANOVA - Continuous Cigarette Consumption:")
print(adonis_test_continuous)
print("PERMANOVA - Smoking Intensity Categories:")
print(adonis_test_categorical)
physeq_rel <- transform_sample_counts(physeq, function(x) x / sum(x))
physeq_genus <- tax_glom(physeq_rel, "Genus", NArm = TRUE)
deseq_test <- phyloseq_to_deseq2(physeq, ~ CigarettesPerDay + Age + Sex + BMI)
gm_mean <- function(x, na.rm=TRUE){
exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}
dds <- estimateSizeFactors(deseq_test, geoMeans = apply(counts(deseq_test), 1, gm_mean))
dds <- DESeq(dds, fitType = "local")
res <- results(dds, name = "CigarettesPerDay")
res <- res[order(res$padj), ]
sig_taxa <- res[which(res$padj < 0.1), ]
print("Significantly associated taxa:")
print(sig_taxa)
top_taxa <- rownames(sig_taxa)[1:min(10, nrow(sig_taxa))]
if(length(top_taxa) > 0) {
physeq_top <- prune_taxa(top_taxa, physeq_genus)
differential_plot <- plot_bar(physeq_top, x = "Smoking_Intensity", fill = "Genus") +
facet_wrap(~Genus, scales = "free") +
labs(title = "Differentially Abundant Genera by Smoking Intensity",
x = "Smoking Intensity",
y = "Relative Abundance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
if(nrow(sig_taxa) > 0) {
top_taxa <- rownames(sig_taxa)[1:min(10, nrow(sig_taxa))]
physeq_top <- prune_taxa(top_taxa, physeq_genus)
if(nrow(sig_taxa) > 0) {
+     top_taxa <- rownames(sig_taxa)[1:min(10, nrow(sig_taxa))]
+     physeq_top <- prune_taxa(top_taxa, physeq_genus)
differential_plot <- plot_bar(physeq_top, x = "Smoking_Intensity", fill = "Genus") +
facet_wrap(~Genus, scales = "free") +
labs(title = "Differentially Abundant Genera by Smoking Intensity",
x = "Smoking Intensity",
y = "Relative Abundance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(differential_plot)
print(differential_plot)
print("No significantly differentially abundant taxa found at FDR < 0.1")
res_uncorrected <- res[order(res$pvalue), ]
top_uncorrected <- rownames(res_uncorrected)[1:min(10, nrow(res_uncorrected))]
if(length(top_uncorrected) > 0) {
physeq_top_uncorrected <- prune_taxa(top_uncorrected, physeq_genus)
exploratory_plot <- plot_bar(physeq_top_uncorrected, x = "Smoking_Intensity", fill = "Genus") +
facet_wrap(~Genus, scales = "free") +
labs(title = "Top Taxa with Nominal Associations to Smoking Intensity\n(Uncorrected p-values, FDR > 0.1)",
x = "Smoking Intensity",
y = "Relative Abundance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(exploratory_plot)
# Check if any significant taxa were found
if(nrow(sig_taxa) > 0) {
top_taxa <- rownames(sig_taxa)[1:min(10, nrow(sig_taxa))]
physeq_top <- prune_taxa(top_taxa, physeq_genus)
differential_plot <- plot_bar(physeq_top, x = "Smoking_Intensity", fill = "Genus") +
facet_wrap(~Genus, scales = "free") +
labs(title = "Differentially Abundant Genera by Smoking Intensity",
x = "Smoking Intensity",
y = "Relative Abundance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(differential_plot)
} else {
print("No significantly differentially abundant taxa found at FDR < 0.1")
# Let's look at the top 10 taxa with lowest p-values (uncorrected)
res_uncorrected <- res[order(res$pvalue), ]
top_uncorrected <- rownames(res_uncorrected)[1:min(10, nrow(res_uncorrected))]
if(length(top_uncorrected) > 0) {
physeq_top_uncorrected <- prune_taxa(top_uncorrected, physeq_genus)
exploratory_plot <- plot_bar(physeq_top_uncorrected, x = "Smoking_Intensity", fill = "Genus") +
facet_wrap(~Genus, scales = "free") +
labs(title = "Top Taxa with Nominal Associations to Smoking Intensity\n(Uncorrected p-values, FDR > 0.1)",
x = "Smoking Intensity",
y = "Relative Abundance") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
print(exploratory_plot)
}
}
res_df <- as.data.frame(res)
res_df$taxon <- rownames(res_df)
suggestive_taxa <- res_df[res_df$pvalue < 0.05 & !is.na(res_df$pvalue), ]
if(nrow(suggestive_taxa) > 0) {
print("Taxa with nominal significance (p < 0.05, uncorrected):")
print(suggestive_taxa[order(suggestive_taxa$pvalue),
c("taxon", "log2FoldChange", "pvalue", "padj")])
} else {
print("No taxa reached nominal significance (p < 0.05, uncorrected)")
}
suggestive_taxa_info <- cbind(suggestive_taxa, tax_table(physeq)[suggestive_taxa$taxon, ])
print("Suggestive taxa with taxonomy information:")
print(suggestive_taxa_info[, c("taxon", "Phylum", "Genus", "log2FoldChange", "pvalue", "padj")])
volcano_data <- as.data.frame(res)
volcano_data$taxon <- rownames(volcano_data)
volcano_data$significant <- ifelse(volcano_data$pvalue < 0.05 & !is.na(volcano_data$pvalue), "Nominal (p < 0.05)", "Not significant")
volcano_data$fdr_significant <- ifelse(volcano_data$padj < 0.1 & !is.na(volcano_data$padj), "FDR < 0.1", "FDR > 0.1")
volcano_plot <- ggplot(volcano_data, aes(x = log2FoldChange, y = -log10(pvalue), color = significant)) +
geom_point(alpha = 0.6, size = 2) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = 0, linetype = "dashed", color = "gray") +
labs(title = "Volcano Plot: Microbial Taxa Association with Cigarette Consumption",
subtitle = "Red line indicates p = 0.05 threshold",
x = "Log2 Fold Change (Effect of Cigarettes per Day)",
y = "-Log10 p-value",
color = "Significance") +
theme_minimal() +
scale_color_manual(values = c("Nominal (p < 0.05)" = "red", "Not significant" = "gray"))
print(volcano_plot)
enhanced_volcano <- volcano_plot +
geom_text(data = subset(volcano_data, significant == "Nominal (p < 0.05)"),
aes(label = taxon), vjust = -0.5, hjust = 0.5, size = 3, check_overlap = TRUE) +
labs(subtitle = "Red line indicates p = 0.05 threshold\nLabeled points show taxa with nominal significance")
print(enhanced_volcano)
genus_counts <- table(suggestive_taxa_info$Genus)
print("Frequency of genera among suggestive taxa:")
print(genus_counts)
for(taxon in suggestive_taxa_info$taxon) {
cat("\nTaxon:", taxon, "\n")
cat("Log2FC:", suggestive_taxa_info[suggestive_taxa_info$taxon == taxon, "log2FoldChange"], "\n")
cat("Approximate relative change per cigarette:",
round(2^suggestive_taxa_info[suggestive_taxa_info$taxon == taxon, "log2FoldChange"], 4), "fold\n")
}
cat("With", n_samples, "samples and these effect sizes,")
at("you have approximately X% power to detect similar effects at FDR < 0.1")
cat("you have approximately X% power to detect similar effects at FDR < 0.1")
cat("Consider stating that larger samples may be needed for robust detection")
physeq_copd <- subset_samples(physeq, COPD_Status == "Yes")
physeq_no_copd <- subset_samples(physeq, COPD_Status == "No")
if(nsamples(physeq_copd) > 10) {
deseq_copd <- phyloseq_to_deseq2(physeq_copd, ~ CigarettesPerDay + Age + Sex + BMI)
dds_copd <- DESeq(deseq_copd, quiet = TRUE)
res_copd <- results(dds_copd, name = "CigarettesPerDay")
if(nsamples(physeq_copd) > 10) {
deseq_copd <- phyloseq_to_deseq2(physeq_copd, ~ CigarettesPerDay + Age + Sex + BMI)
dds_copd <- DESeq(deseq_copd, quiet = TRUE)
res_copd <- results(dds_copd, name = "CigarettesPerDay")
cat("\n=== COPD Patients Analysis ===\n")
print(summary(res_copd))
}
if(nsamples(physeq_no_copd) > 10) {
deseq_no_copd <- phyloseq_to_deseq2(physeq_no_copd, ~ CigarettesPerDay + Age + Sex + BMI)
dds_no_copd <- DESeq(deseq_no_copd, quiet = TRUE)
res_no_copd <- results(dds_no_copd, name = "CigarettesPerDay")
cat("\n=== Non-COPD Patients Analysis ===\n")
print(summary(res_no_copd))
}
library(microbiome)
physeq_clr <- transform(physeq, "clr")
clr_matrix <- otu_table(physeq_clr)
if(taxa_are_rows(physeq_clr)) {
clr_matrix <- t(clr_matrix)
}
cat("\n=== CLR-based Linear Models for Suggestive Taxa ===\n")
for(taxon in suggestive_taxa_info$taxon[1:4]) {
if(taxon %in% colnames(clr_matrix)) {
model <- lm(clr_matrix[, taxon] ~ CigarettesPerDay + Age + Sex + BMI,
data = metadata_df)
cat("\nTaxon:", taxon, "\n")
print(summary(model)$coefficients["CigarettesPerDay", ])
}
}
clr_matrix <- as(otu_table(physeq_clr), "matrix")
if(taxa_are_rows(physeq_clr)) {
clr_matrix <- t(clr_matrix)
}
cat("\n=== CLR-based Linear Models for Suggestive Taxa ===\n")
for(taxon in suggestive_taxa_info$taxon[1:4]) {
if(taxon %in% colnames(clr_matrix)) {
model <- lm(clr_matrix[, taxon] ~ CigarettesPerDay + Age + Sex + BMI,
data = metadata_df)
cat("\nTaxon:", taxon, "\n")
print(summary(model)$coefficients["CigarettesPerDay", ])
}
}
metadata_centered <- metadata_df
metadata_centered$CigarettesPerDay_centered <- scale(metadata_centered$CigarettesPerDay, center = TRUE, scale = FALSE)
metadata_centered$Age_centered <- scale(metadata_centered$Age, center = TRUE, scale = FALSE)
metadata_centered$BMI_centered <- scale(metadata_centered$BMI, center = TRUE, scale = FALSE)
sample_data(physeq)$CigarettesPerDay_centered <- metadata_centered$CigarettesPerDay_centered
sample_data(physeq)$Age_centered <- metadata_centered$Age_centered
sample_data(physeq)$BMI_centered <- metadata_centered$BMI_centered
suggestive_otu <- otu_table(prune_taxa(suggestive_taxa_info$taxon, physeq_rel))
if(taxa_are_rows(suggestive_otu)) {
suggestive_otu <- t(suggestive_otu)
}
correlation_matrix <- cor(suggestive_otu, method = "spearman")
library(corrplot)
corrplot(correlation_matrix, method = "color", type = "upper",
title = "Co-occurrence Patterns Among Suggestive Taxa",
mar = c(0,0,2,0))
dose_response_data <- data.frame(
CigarettesPerDay = metadata_df$CigarettesPerDay
)
for(taxon in suggestive_taxa_info$taxon) {
if(taxon %in% rownames(otu_table(physeq_rel))) {
dose_response_data[, taxon] <- as.numeric(otu_table(physeq_rel)[taxon, ])
}
}
dose_response_long <- dose_response_data %>%
dose_response_long <- dose_response_data %>%
pivot_longer(cols = -CigarettesPerDay, names_to = "Taxon", values_to = "Abundance") %>%
filter(Taxon %in% suggestive_taxa_info$taxon)
dose_plot <- ggplot(dose_response_long, aes(x = CigarettesPerDay, y = Abundance)) +
geom_point(alpha = 0.5, size = 1) +
geom_smooth(method = "lm", color = "red", se = TRUE) +
facet_wrap(~Taxon, scales = "free_y", ncol = 3) +
labs(title = "Dose-Response Relationships for Suggestive Taxa",
x = "Cigarettes per Day",
y = "Relative Abundance") +
theme_minimal()
print(dose_plot)
tryCatch({
library(picrust2)
# Functional prediction code would go here
cat("Functional prediction analysis could provide insights into metabolic changes\n")
}, error = function(e) {
cat("Picrust2 not available, but functional analysis could explore:\n")
cat("- Short-chain fatty acid producers\n")
cat("- Inflammatory vs anti-inflammatory taxa\n")
cat("- Mucin degradation capabilities\n")
})
cat("\n=== Power Considerations ===\n")
cat("Current sample size:", n_samples, "\n")
cat("Number of suggestive taxa:", nrow(suggestive_taxa_info), "\n")
cat("Average effect size:", round(mean(abs(suggestive_taxa_info$log2FoldChange)), 4), "log2FC\n")
cat("For 80% power to detect these effects at FDR < 0.1, you might need ~500-1000 samples\n")
cat("This aligns with typical microbiome studies requiring large samples for subtle effects\n")
library(phyloseq)
library(ggplot2)
library(vegan)
rare_curve_data <- vegan::rarecurve(otu_table(physeq), step = 50, label = FALSE)
read_counts <- sample_sums(physeq)
depth_histogram <- ggplot(data.frame(Reads = read_counts), aes(x = Reads)) +
geom_histogram(binwidth = 1000, fill = "steelblue", color = "black", alpha = 0.7) +
labs(title = "Distribution of Sequencing Depth Across Samples",
x = "Number of Sequences per Sample",
y = "Number of Samples") +
theme_minimal()
print(depth_histogram)
ggsave("Sequencing_Depth_Histogram.tiff", plot = depth_histogram,
device = "tiff", width = 8, height = 6, dpi = 300)
rare_curve_data <- vegan::rarecurve(otu_table(physeq), step = 50, label = FALSE)
rare_df <- data.frame(
SampleID = character(),
Sequences = numeric(),
OTUs = numeric()
)
for(i in seq_along(rare_curve_data)) {
if(length(rare_curve_data[[i]]) > 0) {
temp_df <- data.frame(
SampleID = rep(i, length(rare_curve_data[[i]])),
Sequences = attr(rare_curve_data[[i]], "Subsample"),
OTUs = as.vector(rare_curve_data[[i]])
)
rare_df <- rbind(rare_df, temp_df)
}
}
rarefaction_plot <- ggplot(rare_df, aes(x = Sequences, y = OTUs, group = SampleID)) +
geom_line(linewidth = 0.3, alpha = 0.6, color = "steelblue") +
labs(title = "Rarefaction Curves for All Samples",
x = "Number of Sequences Sampled",
y = "Number of Observed OTUs") +
theme_minimal() +
theme(legend.position = "none",
panel.grid.minor = element_blank())
library(phyloseq)
library(ggplot2)
library(vegan)
rare_curve_data <- vegan::rarecurve(otu_table(physeq), step = 50, label = FALSE)
otu_matrix <- as(otu_table(physeq), "matrix")
if(taxa_are_rows(physeq)) {
otu_matrix <- t(otu_matrix)
}
rare_curve_data <- vegan::rarecurve(otu_matrix, step = 50, label = FALSE)
rare_df <- data.frame(
SampleID = character(),
Sequences = numeric(),
OTUs = numeric()
)
for(i in seq_along(rare_curve_data)) {
if(length(rare_curve_data[[i]]) > 0) {
temp_df <- data.frame(
SampleID = rep(paste0("Sample_", i), length(rare_curve_data[[i]])),
Sequences = attr(rare_curve_data[[i]], "Subsample"),
OTUs = as.vector(rare_curve_data[[i]])
)
rare_df <- rbind(rare_df, temp_df)
}
}
rarefaction_plot <- ggplot(rare_df, aes(x = Sequences, y = OTUs, group = SampleID)) +
geom_line(linewidth = 0.2, alpha = 0.6, color = "steelblue") +
labs(title = "Rarefaction Curves for Respiratory Microbiota Samples",
x = "Number of Sequences Sampled",
y = "Number of Observed OTUs") +
theme_minimal() +
theme(legend.position = "none",
panel.grid.minor = element_blank(),
plot.title = element_text(hjust = 0.5))
print(rarefaction_plot)
ggsave("Rarefaction_Curves.tiff", plot = rarefaction_plot,
device = "tiff", width = 8, height = 6, dpi = 300,
compression = "lzw")
